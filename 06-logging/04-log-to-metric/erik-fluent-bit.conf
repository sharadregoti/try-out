[INPUT]
    Name               dummy
    Dummy              {"message":"dummy", "kubernetes":{"namespace_name": "default", "docker_id": "abc123", "pod_name": "pod1", "container_name": "mycontainer", "pod_id": "def456"}, "duration": 20, "color": "red", "shape": "circle"}
    Tag                dummy.log1

[INPUT]
    Name               dummy
    Dummy              {"message":"hello", "kubernetes":{"namespace_name": "default", "docker_id": "abc123", "pod_name": "pod1", "container_name": "mycontainer", "pod_id": "def456"}, "duration": 60, "color": "blue", "shape": "square"}
    Tag                dummy.log2

[INPUT]
    Name               dummy
    Dummy              {"host": "31.163.219.152", "user-identifier": "-", "datetime": "31/Oct/2023:04:30:04 +0000", "method": "GET", "request": "/optimize/exploit/architect", "protocol": "HTTP/2.0", "status": 201, "bytes": 21985, "referer": "http://www.leadschemas.biz/syndicate/seamless/experiences/repurpose"}
    Tag                dummy.log3

[INPUT]
    Name               dummy
    Dummy              {"host": "31.163.219.152", "user-identifier": "-", "datetime": "31/Oct/2023:04:30:04 +0000", "method": "GET", "request": "/optimize/exploit/architect", "protocol": "HTTP/2.0", "status": 500, "bytes": 21985, "referer": "http://www.leadschemas.biz/syndicate/seamless/experiences/repurpose"}
    Tag                dummy.log4

[FILTER]
    name               log_to_metrics
    match              dummy.log*
    tag                test_metric
    metric_mode        counter
    metric_name        count_all_dummy_messages
    metric_description This metric counts dummy messages

[FILTER]
    name               log_to_metrics
    match              dummy.log*
    tag                test_metric
    regex              color bl.*
    metric_mode        counter
    metric_name        count_all_blue_dummy_messages
    metric_description This metric counts only the dummy messages containing the color blue

[FILTER]
    name               log_to_metrics
    match              dummy.log*
    tag                test_metric
    regex              status 500
    metric_mode        counter
    metric_name        count_all_status_500_dummy_messages
    metric_description This metric counts only the dummy messages with a 500 error and does not work

[output]
    name stdout
    match test_metric